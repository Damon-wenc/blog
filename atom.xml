<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simple Talks</title>
  <subtitle>简·聊</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://damon-wenc.github.io/blog/"/>
  <updated>2019-03-24T15:28:33.004Z</updated>
  <id>http://damon-wenc.github.io/blog/</id>
  
  <author>
    <name>wenchang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>登高望远，好好学习</title>
    <link href="http://damon-wenc.github.io/blog/2019/03/24/way-to-be-a-global-learner/"/>
    <id>http://damon-wenc.github.io/blog/2019/03/24/way-to-be-a-global-learner/</id>
    <published>2019-03-24T08:56:09.000Z</published>
    <updated>2019-03-24T15:28:33.004Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章简单介绍（记录）一下如何科学上网的方法、准备以及入门教程。</p>
<a id="more"></a>
<h1 id="前期关键点"><a href="#前期关键点" class="headerlink" title="前期关键点"></a>前期关键点</h1><p>keywords: 国外vps、ss server、ss client</p>
<p>ss是一种带加密的流量转发方式，所以首先你需要一台位于国外网络的vps，它将转发你加密后的流量到国外的网络。<br>server 和 client不必说了，cs模式。<br>如果要多人共享，有成熟的ss manager方案了。<br>项目主地址：<a href="https://github.com/shadowsocks" target="_blank" rel="external">GitHub</a>，各种各样的子项目均在这个位置下。</p>
<h1 id="搭建方式"><a href="#搭建方式" class="headerlink" title="搭建方式"></a>搭建方式</h1><p>下面会逐级介绍，其实个人使用止步于BBR即可了，省时省力；多人使用可以上一个共享环境，会费力一些，不过后面也有shortcut~</p>
<h2 id="vps-耗时1小时"><a href="#vps-耗时1小时" class="headerlink" title="vps (耗时1小时)"></a>vps (耗时1小时)</h2><p>预计耗时写的比较长，其实熟练后很快，无非就是掏钱、买、部署、连上嘛 ┑(￣Д ￣)┍<br>这里主要是第一次的选择时间会长一些，如果遇上纠结星人，比如我，几乎要选好几天的。。。</p>
<p>vps个人使用可以选择年付的、线路优良的路线，例如搬瓦工的CN2 GIA或者something else；如果多人使用，可能尽量选择月付的vps会比较好，毕竟目标较大。</p>
<p>选择指导的话主要推荐两个：<a href="https://zhuanlan.zhihu.com/VPS-youhuima" target="_blank" rel="external">VPS艹机狂魔</a> 和 <a href="https://zhuji.lu/topic/67/新手入门-进阶-vps-推荐-购买指南" target="_blank" rel="external">撸主机</a></p>
<p>个人用过bandwagon和<a href="https://www.vultr.com/?ref=7442164" target="_blank" rel="external">vultr</a>，未来打算试一试<a href="https://app.cloudcone.com/?ref=3162" target="_blank" rel="external">cloudcone</a>。<br>好心人看完我这篇文章觉得还有用，如果想试试<a href="https://www.vultr.com/?ref=7442164" target="_blank" rel="external">vultr</a>或<a href="https://app.cloudcone.com/?ref=3162" target="_blank" rel="external">cloudcone</a>的话，可以点击链接注册试用，可以给我返几根雪糕钱（doge）。</p>
<p>简单感受就是：</p>
<ul>
<li>bandwagon：单节点，无法换服务器ip，封了就完了。比较省心省事，自带模板。年付不贵。</li>
<li><a href="https://www.vultr.com/?ref=7442164" target="_blank" rel="external">vultr</a>：全球机房，封了一个ip可以换另一个机房再试试。物理硬件性能爆炸强，网络较快。主要优点就是<strong>节点多</strong>。</li>
<li><a href="https://app.cloudcone.com/?ref=3162" target="_blank" rel="external">cloudcone</a>：看起来ping值低，速度快。可月付。</li>
</ul>
<p>vps现在变贵了，年费大约都在200多300块，所以也可以众筹下，土豪除外。</p>
<p>选择机房的话就以下几个点：</p>
<ul>
<li>靠谱度，别跑路。</li>
<li>最好能换ip。</li>
<li>最基本能用ping命令测试下机房ip看看时延和丢包率总要会吧。</li>
<li>可以试试<a href="https://www.ipip.net/product/client.html" target="_blank" rel="external">besttrace</a>，这个有图形化的traceroute显示，线路肯定绕弯越少越快咯。</li>
</ul>
<h2 id="ss-server-（耗时3分钟）"><a href="#ss-server-（耗时3分钟）" class="headerlink" title="ss server （耗时3分钟）"></a>ss server （耗时3分钟）</h2><p>GitHub上的<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="external">libev</a>版本，还有其他Python或Go版本，都差不多。</p>
<p>以Ubuntu为例的话就：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># install</span></div><div class="line">sudo apt update</div><div class="line">sudo apt install shadowsocks-libev</div><div class="line"></div><div class="line"><span class="comment"># Edit the configuration file</span></div><div class="line">sudo vim /etc/shadowsocks-libev/config.json</div><div class="line"></div><div class="line"><span class="comment"># Edit the default configuration for debian</span></div><div class="line">sudo vim /etc/default/shadowsocks-libev</div><div class="line"></div><div class="line"><span class="comment"># Start the service</span></div><div class="line">sudo /etc/init.d/shadowsocks-libev start    <span class="comment"># for sysvinit, or</span></div><div class="line">sudo systemctl start shadowsocks-libev      <span class="comment"># for systemd</span></div></pre></td></tr></table></figure></p>
<p>就完事儿了。<br>主要就修改config.json里的ip、端口、密码和加密方式，最简改个ip就行了。</p>
<h2 id="ss-client-（耗时3分钟）"><a href="#ss-client-（耗时3分钟）" class="headerlink" title="ss client （耗时3分钟）"></a>ss client （耗时3分钟）</h2><p>client下载系统平台对应的版本就好了：</p>
<ul>
<li><a href="https://github.com/shadowsocks/ShadowsocksX-NG/releases" target="_blank" rel="external">MacOS</a></li>
<li><a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="external">Android</a></li>
<li><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">Windows</a></li>
</ul>
<p>然后填上上面server config.json的参数就好了。</p>
<h2 id="BBR"><a href="#BBR" class="headerlink" title="BBR"></a>BBR</h2><p>BBR是Google开发的TCP拥塞算法，简单来说就是动态超发，可以在丢包多的网络下显著改善网络性能。对网络环境恶劣的ss有奇效。<br>具体原理和用法就不在这里啰嗦了，网上一搜一大把。<br>直接发代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">modprobe tcp_bbr</div><div class="line"><span class="built_in">echo</span> <span class="string">"tcp_bbr"</span> &gt;&gt; /etc/modules-load.d/modules.conf</div><div class="line"><span class="built_in">echo</span> <span class="string">"net.core.default_qdisc=fq"</span> &gt;&gt; /etc/sysctl.conf</div><div class="line"><span class="built_in">echo</span> <span class="string">"net.ipv4.tcp_congestion_control=bbr"</span> &gt;&gt; /etc/sysctl.conf</div><div class="line"></div><div class="line">sysctl -p</div><div class="line">sysctl net.ipv4.tcp_available_congestion_control</div><div class="line">sysctl net.ipv4.tcp_congestion_control</div></pre></td></tr></table></figure></p>
<p>注意vps OS的<strong>Linux内核版本需大于4.9</strong>.</p>
<p><strong>个人玩家到这里就可以结束了</strong>。</p>
<h2 id="ss-manager-（耗时8小时）"><a href="#ss-manager-（耗时8小时）" class="headerlink" title="ss manager （耗时8小时）"></a>ss manager （耗时8小时）</h2><p>因为我是个穷*，所以服务器都靠一群爱好学习的小伙伴众筹了。对于多人使用的环境，可以搭一个<a href="https://github.com/shadowsocks/shadowsocks-manager" target="_blank" rel="external">ss-manager</a>来管理用户的注册和使用状况。</p>
<p>这个玩意儿因为是比较偏前端的，对于后端程序员我来说不太熟，折腾了好久；尤其是原作者开始商业卖钱了… 文档就更新得更少了，很多时候要靠猜，着实花费了好多时间。</p>
<p>下面我总结了一下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">apt-get update</div><div class="line">apt-get install net-tools curl git sudo software-properties-common python-pip nodejs shadowsocks-libev node-pre-gyp -y tzdata</div><div class="line">curl <span class="_">-s</span>L https://deb.nodesource.com/setup_10.x | sudo -E bash -</div><div class="line">sudo apt-get install -y nodejs</div><div class="line">npm install -g node-pre-gyp</div><div class="line">sudo npm i -g shadowsocks-manager@0.29 --unsafe-perm</div><div class="line">mkdir /root/.ssmgr</div><div class="line"></div><div class="line"></div><div class="line">vi /root/.ssmgr/path.yml</div><div class="line"></div><div class="line"><span class="built_in">type</span>: s</div><div class="line">shadowsocks:</div><div class="line">  address: 127.0.0.1:6001</div><div class="line">manager:</div><div class="line">  address: 0.0.0.0:6002</div><div class="line">  password: <span class="string">'******'</span></div><div class="line">db: <span class="string">'db.sqlite'</span></div><div class="line"></div><div class="line"></div><div class="line">ss-manager -m aes-256-cfb -u --manager-address 127.0.0.1:6001</div><div class="line">ssmgr -c /root/.ssmgr/path.yml</div><div class="line"></div><div class="line"></div><div class="line">vi /root/.ssmgr/webgui.yml</div><div class="line"></div><div class="line"><span class="built_in">type</span>: m</div><div class="line">manager:</div><div class="line">  address: your_server_ip_address:6002</div><div class="line">  password: <span class="string">'*****'</span></div><div class="line">plugins:</div><div class="line">  flowSaver:</div><div class="line">    use: <span class="literal">true</span></div><div class="line">  user:</div><div class="line">    use: <span class="literal">true</span></div><div class="line">  account:</div><div class="line">    use: <span class="literal">true</span></div><div class="line">  email:</div><div class="line">    use: <span class="literal">true</span></div><div class="line">    <span class="built_in">type</span>: <span class="string">'smtp'</span></div><div class="line">    username: <span class="string">'*****@163.com'</span></div><div class="line">    password: <span class="string">'*****'</span></div><div class="line">    host: <span class="string">'smtp.163.com'</span></div><div class="line">  webgui:</div><div class="line">    use: <span class="literal">true</span></div><div class="line">    host: <span class="string">'0.0.0.0'</span></div><div class="line">    port: <span class="string">'80'</span></div><div class="line">    site: <span class="string">'http://your_server_ip_address'</span></div><div class="line">    <span class="comment"># icon: 'icon.png'</span></div><div class="line">    <span class="comment"># skin: 'default'</span></div><div class="line">    <span class="comment"># googleAnalytics: 'UA-xxxxxxxx-x'</span></div><div class="line">    <span class="comment"># gcmSenderId: '476902381496'</span></div><div class="line">    <span class="comment"># gcmAPIKey: 'AAAAGzddLRc:XXXXXXXXXXXXXX'</span></div><div class="line">db: <span class="string">'webgui.sqlite'</span></div><div class="line"></div><div class="line">ssmgr -c /root/.ssmgr/webgui.yml</div></pre></td></tr></table></figure></p>
<p>结合上面的文档，再对照<a href="https://shadowsocks.github.io/shadowsocks-manager/#/home" target="_blank" rel="external">官方</a>文档好好琢磨下，你应该也可以搭起来的。</p>
<h2 id="终极解决方案（耗时3分钟）"><a href="#终极解决方案（耗时3分钟）" class="headerlink" title="终极解决方案（耗时3分钟）"></a>终极解决方案（耗时3分钟）</h2><p><strong>Docker</strong>，一键搞定以上所有方案，因为除了BBR之外所有的都是用户态程序。</p>
<ol>
<li>创建配置文件（和上面一样，就不copy下来了）</li>
<li><p>运行docker</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker pull bigcow88/ss-manager-ubuntu:latest</div><div class="line">docker run --network=host --privileged -v /root/.ssmgr:/root/.ssmgr -dt ss-suite</div></pre></td></tr></table></figure>
</li>
<li><p>调整BBR（同样和上面一样）</p>
</li>
</ol>
<p>是不是很嗨？</p>
<h1 id="入门文档推荐"><a href="#入门文档推荐" class="headerlink" title="入门文档推荐"></a>入门文档推荐</h1><ul>
<li><a href="https://zhuanlan.zhihu.com/VPS-youhuima" target="_blank" rel="external">VPS艹机狂魔</a></li>
<li><a href="https://zhuji.lu/topic/67/新手入门-进阶-vps-推荐-购买指南" target="_blank" rel="external">撸主机</a></li>
<li><a href="https://github.com/shadowsocks" target="_blank" rel="external">GitHub</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章简单介绍（记录）一下如何科学上网的方法、准备以及入门教程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="水" scheme="http://damon-wenc.github.io/blog/tags/%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>老司机练级攻略</title>
    <link href="http://damon-wenc.github.io/blog/2019/02/24/way-to-be-an-old-driver/"/>
    <id>http://damon-wenc.github.io/blog/2019/02/24/way-to-be-an-old-driver/</id>
    <published>2019-02-23T16:14:16.000Z</published>
    <updated>2019-03-24T08:51:45.276Z</updated>
    
    <content type="html"><![CDATA[<p>这里的“老司机”，咳咳，是真正意义上的老司机…<br>这篇水文，既用以阶段性警醒自己开车不要犯错，同时方便与亲朋好友深刻交流入门及上路心得，也可以分享给有需要的人士。<br>既然是水文，就充分发扬“水”的特点，从选车购车、基础知识、重要前戏、实际操作四个方面疯狂BB起来…</p>
<a id="more"></a>
<h1 id="购车"><a href="#购车" class="headerlink" title="购车"></a>购车</h1><ul>
<li>购车前先思考自己的需求，代步、买菜、家用还是让自己爽，在价格区间找出若干车型，去4S店实地试驾几轮，相信自己的第一直觉。<strong>一定要试驾，试驾又不要钱</strong>。</li>
<li>通常在<a href="http://autohome.com.cn" target="_blank" rel="external">汽车之家</a>上搜索目标车型，它家的参数系统做得相对最好，可以同车型、跨车型对比配置，“车主价格”和“口碑”也是值得浏览的点，其他偶尔看看新闻就好了。</li>
<li>找到目标车型后，思考自己到底最需要哪几个点，也不要为未来的需求留太多的占比（比如大空间）。到底是颜值、操控、动力，还是省油、省心、二手残值。</li>
<li>没事儿去4S店逛几轮，带上驾照试驾。最好提前预习下靠谱的车评，比如“<a href="http://i.youku.com/u/UMTUxMTg3NjU0MA==?spm=a2h0k.11417342.soresults.ddetail" target="_blank" rel="external">38号车评中心</a>”，然后带着观察点去仔细试驾，感受下汽车的调性和本人的性格合不合适。</li>
<li>购车时优惠自己谈，参照网上的“落地”车主价格，拿个差不多的优惠就好了。</li>
<li>除了出厂价之外，当前优惠算一笔。保险费是保险公司算的，动不了（卖保险4S店有提成的）。新能源可以免购置税，大约购置税＝购车款/(1+17%)×购置税率(10%)，其实大致就是10%的总价。车船税和交强险也是固定的。剩下的这个上牌费可以谈，全送或500就挺好了。不要砍价砍得伤感情…</li>
<li>4S店通常会送脚垫、抱枕，有些会送贴膜。贴膜这个东西其实不是汽车厂商标配的，所以它对安全是有一定影响的。切记不要贴颜色太深的膜，晚上看不清后视镜。需要的话贴浅色就好了。（土豪贴龙膜？这玩意儿超贵）</li>
<li>一般品牌是三年十万公里三包，也有特别的例如雷克萨斯或领克。三包期间需要去品牌任意4S店保养，也就是常规检查和更换。一般小保养500左右。（购车时多磨磨销售看能不能送保养和代金券，这可都是真金白银）</li>
<li>到这里就买完车了，等待销售通知到车；到车后销售会预约临牌，有临牌了就可以提车了。</li>
</ul>
<h1 id="重要前戏"><a href="#重要前戏" class="headerlink" title="重要前戏"></a>重要前戏</h1><p>这里主要推荐两个汽车类视频up主，一个是基础知识和试驾体验，一个是交通事故视频。</p>
<h2 id="38号车评中心"><a href="#38号车评中心" class="headerlink" title="38号车评中心"></a>38号车评中心</h2><p>官方地址是：<a href="http://i.youku.com/u/UMTUxMTg3NjU0MA==?spm=a2h0k.11417342.soresults.ddetail" target="_blank" rel="external">优酷</a>，B站有一个，不确定是不是官方的，不过也会同步更新，且没有广告，但早期视频有缺失：<a href="https://space.bilibili.com/52091800/" target="_blank" rel="external">Bilibili</a>。</p>
<h3 id="一定要看的视频"><a href="#一定要看的视频" class="headerlink" title="一定要看的视频"></a>一定要看的视频</h3><ol>
<li><a href="https://v.youku.com/v_show/id_XNzE5Mzg3NDE2.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">座椅调节</a></li>
<li><a href="https://v.youku.com/v_show/id_XMTc0ODI1OTI0NA==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">老司机们遇到的新问题</a></li>
<li><a href="https://v.youku.com/v_show/id_XNzMxNDY1MDUy.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">自动挡停车</a></li>
<li><a href="https://v.youku.com/v_show/id_XNzI3MTEzMjE2.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">小车司机不了解的世界（集卡王者盲区）</a></li>
<li><a href="https://v.youku.com/v_show/id_XODQ2MzAwMzQw.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">王者之公交篇</a></li>
<li><a href="https://v.youku.com/v_show/id_XODA0MjEyMTg0.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">如何把车开得又快又稳</a></li>
<li><a href="https://v.youku.com/v_show/id_XODA5NTM4NTQ0.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">优质乘客</a></li>
<li><a href="https://v.youku.com/v_show/id_XNzQ3MzgxMzY0.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">“老司机”的错误观点</a></li>
<li><a href="https://v.youku.com/v_show/id_XMTMyMzc5MTg4OA==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">不良驾驶习惯之方向盘篇</a></li>
<li><a href="https://v.youku.com/v_show/id_XMTM0MzY3MzcxMg==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">不良驾驶习惯之排挡篇</a></li>
<li><a href="https://v.youku.com/v_show/id_XMTI5Njg5NTkwMA==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">为什么我开车比你省油</a></li>
<li><a href="https://v.youku.com/v_show/id_XMTYzMDg1NjkxMg==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">有哪些不是安全性配置的安全配置</a></li>
<li><a href="https://v.youku.com/v_show/id_XODI4Mzk4OTM2.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">除D以外的自动挡的前进挡</a></li>
<li><a href="https://v.youku.com/v_show/id_XODU2MDkzOTYw.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">车辆自行保养检查1</a></li>
<li><a href="https://v.youku.com/v_show/id_XODYxMTEyOTMy.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">车辆自行保养检查2</a></li>
<li><a href="https://v.youku.com/v_show/id_XODY3MDYzODQw.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">车辆自行保养检查3</a></li>
<li><a href="https://v.youku.com/v_show/id_XMTQ2MjYzOTM2NA==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">冬季长途驾驶注意事项</a></li>
<li><a href="https://v.youku.com/v_show/id_XMTQ2NTEyNDI4MA==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">冬季出行前检查</a></li>
<li><a href="https://v.youku.com/v_show/id_XNzM2OTI4MTA0.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">夏季出行前检查</a></li>
<li><a href="https://v.youku.com/v_show/id_XMjQ4Mjg5ODI4OA==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">雪地安全驾驶</a></li>
<li><a href="https://v.youku.com/v_show/id_XNzIxMDY1MTk2.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">山路安全驾驶</a></li>
<li><a href="https://v.youku.com/v_show/id_XMzA1Njc3NDk2NA==.html?spm=a2hzp.8253869.0.0" target="_blank" rel="external">长假出行驾车/乘车安全贴士</a></li>
</ol>
<p>如果优酷嫌麻烦，这里有↑上面的大部分合集，无广告<a href="https://www.bilibili.com/video/av43112662?t=629&amp;p=28" target="_blank" rel="external">B站部分合集</a>，讲得特别细，可以按照顺序看，从座椅调节到方向盘、后视镜、王者盲区，各种注意事项应有尽有。<br>还有其他挺有意思的手动挡相关及其他驾驶讲堂，还有茫茫多具体车型的测评。</p>
<h2 id="交通事故video"><a href="#交通事故video" class="headerlink" title="交通事故video"></a>交通事故video</h2><p>强烈推荐，上路前一定要看：<a href="https://space.bilibili.com/28152409/video?tid=0&amp;page=1&amp;keyword=&amp;order=pubdate" target="_blank" rel="external">Bilibili</a></p>
<p>这个东西，就相当于学生时代的错题本，或者围棋象棋的残局棋谱，都是真实的，每天在马路上发生的交通事故。</p>
<p>你可能会问为什么要看这个东西，其实这个东西非常有用，在这里你可以马路上都有哪些新手、坏（傻）蛋（逼）、二愣子以怎样奇怪的方式开车引发各种交通事故。天下的事故通常来说是相似的，你遇到的事故其他司机也基本都会遇到，很多事故都在这里有集中展示。</p>
<p>我们要做的是两件事，第一件统计各种事故发生的概率（seriously）；第二件提醒自己，开车到类似的场景，应该怎么操作，或者有多高的概率遇到危险。</p>
<p>1.统计事故发生的概率。</p>
<p>这个很严肃的，新手至少看十期，你可以旁边一张白纸，或者Excel表格，然后观看一个事故，暂停，简单记录下场景和原因。比如十字路口、小区内部道路、排队车流、弯道会车、电瓶车穿行、人行道、追尾专用车道，看到一个事故，如果场景有了就加1，如果没有就补上。</p>
<p>这样你至少看十期后，对相应的危险的场景就有个大概的认识了。而且也知道哪些场景容易爆发交通事故，以及危险程度如何。</p>
<p>常言道老司机越老越胆小（猥琐），是因为他们看多了交通事故，就变得小心起来了。但是那些老司机一辈子也就看几十上百场事故，你通过看集锦，一集就能超越他们。（我已经看了几千场事故了，了然于心）</p>
<p>2.自己应该怎么操作</p>
<p>首先，这个不管是你开不开车，都是很有必要去学习安全相关的知识的。你开车，严格遵守安全驾驶；不开车时，也要告诉家人哪些是危险操作，其他司机经常会犯的。</p>
<ul>
<li>常言道，君子不立危墙之下。</li>
<li>当你自己开车时，首先就是你要判断自己接下来的操作是不是合法的；一定要规范驾驶，而不规范驾驶通常会导致主责甚至全责。</li>
<li>从菜鸡时就要养好习惯，经常观察后视镜，</li>
<li>其次要预估接下来的操作会有多大概率的风险，要‘防御性驾驶’，谨防鬼探头或其他横冲直撞的司机。</li>
<li>货车等王者有时候是真的完全看不到你，不要让自己去挑战王者，要将生命的主动权掌握在自己手里。</li>
<li>向家人传递观念，哪些危险的事绝对不能去做，靠近都不要靠近；过马路要抬手向司机示意，等待减速后再过去；小心内轮差；规范打车、搭车。</li>
<li>总结一下：绝对不能全责、危险场景提高警惕、谨防鬼探头、告知家人。</li>
</ul>
<h3 id="一定要看的视频-1"><a href="#一定要看的视频-1" class="headerlink" title="一定要看的视频"></a>一定要看的视频</h3><ol>
<li>共享单车碰瓷：<a href="https://www.bilibili.com/video/av28097718" target="_blank" rel="external">碰瓷集锦1</a>、<a href="https://www.bilibili.com/video/av30835485" target="_blank" rel="external">碰瓷集锦2</a>、<a href="https://www.bilibili.com/video/av31445649" target="_blank" rel="external">碰瓷集锦3</a>、<a href="https://www.bilibili.com/video/av45165115?t=361" target="_blank" rel="external">碰瓷集锦4</a></li>
<li>路怒合集：<a href="https://www.bilibili.com/video/av35671172" target="_blank" rel="external">冷静1</a>、<a href="https://www.bilibili.com/video/av26659410" target="_blank" rel="external">冷静2</a></li>
<li>其余每天日常，至少看十期，挺有意思的，经常看看…</li>
</ol>
<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><p>这里以从出家门到进公司做一个行程的模拟。</p>
<ol>
<li>走到停车位旁边，从副驾驶一侧绕车一周，顺便检查下车有没有意外磕碰、猫 / 狗 / 小孩在躲藏、车牌完整、轮胎憋下去，最后从主驾驶上车。</li>
<li>调整好座椅、后视镜，系好安全带，点火，观察仪表盘没有告警图标，提前计划好行车路线，准备出发。</li>
<li>挂D档，先远光闪一下，提示其他车，打转向灯，踩着刹车缓慢直行向前一小段距离，观察左右没有阻碍其他车辆；</li>
<li>然后转动方向盘，同时观察转向方的后视镜，注意不要剐蹭到墙或者旁边车辆；出位后行驶。</li>
<li>地库一般坡度都还比较陡的，视线盲区较大，出车库时记得慢行，小心撞到行人。</li>
<li>上坡跟车不要太近，谨防前车溜车。</li>
<li>现在一般10w车都带上坡辅助了，脚离开刹车后也记得尽快踩油门，合适力量保持车不要熄火。</li>
<li>在小区内部道路行驶一定要慢和注意观察，很可能有小孩、狗、或者不看车的老人、女司机、骑车人，慢行保安全。</li>
<li>从辅路并入主路时，提前观察并打灯，如果空间足够或有车减速让行，平稳加速并线，并迅速加速至主道平均速度。如果没有，踩死刹车等待机会，不要一步一步划出去。</li>
<li>并线完成后记得回灯。</li>
<li>别人打灯就让，不打灯能让就让… 减速让行，千万别自己瞎晃着去躲，这样碰了隔壁车道的车就是自己全责了。实在让不了就撞，变道/骑线全责，自己的部分保险负责。</li>
<li><strong>速度</strong>，这条太重要了，也是新手最容易犯的错。不是越慢越好，而是在限速范围内，和周围车流速度保持一致；甚至在熟悉的道路，如果周围车流略微超速但无抓拍，也与他们保持一致最安全。</li>
<li>首先车在自己车道行驶是最安全的，但如果你开的一台龟速车，很多车都会选择变道，坏的人甚至还会别你一下，这就非常危险了。所以要保持合适的跟车距离，同时速度与周围车流一致。</li>
<li>其次相撞时伤害是看相对速度，如果一个龟速车40km/h往120km/h的高速主路上并线，这80的速度差，真是害人。</li>
<li>所以，在US没有固定测速，警察高速抓拍的时候，只会惩罚第一辆和最后一辆车，中间的不会被处罚。因为第一辆把整个车流速度提高了，而最后一辆有机会结束这场超速，中间的出于安全原则不予处罚。</li>
<li>当接下来都是直行时，最好将车保持在直行车道，以防最左或最右突然是强制转弯了。同理，要转弯最好提前变道，不要到了路口才采取措施。</li>
<li>直行是相对最简单的操作了，所以特别是在新手期，要强制自己，在有空余的场景下，多看左、中、右三个后视镜。看多了，自然在需要用到的时候就熟了。</li>
<li><strong>多看后视镜</strong>有利于提前观察到后方告诉驶来的“导弹”，这种很危险。</li>
<li>需要变道时，预先观察后视镜，打灯的时候不要吓到对方了；其次打灯，先观察旁边车道车的反应，有没有加速冲上来或者减速让道或者匀速不抢，在打灯3秒后并入隔壁车道。</li>
<li>一次变一道，连续变道盲区非常大。</li>
<li>不要和别人同时变道，包括左右、前后，如果其他车先开始变道最好灭灯等他先完成再继续。</li>
<li>盲区是非常危险的，如字面意思，从后视镜观察，从90°~135°之间的夹角是无法从后视镜看见的。有条件的土豪强烈建议上带有“盲区监控”或“变道提醒”功能的车；其他的最好能做到快速扭头观察一下，这在国外有个专门的词：“<strong>shoulder check</strong>”；最差也要打灯等三秒，期间好好观察是否有条件变道。</li>
<li>如果实在迫不得已要变道了，需要转向灯+喇叭同时作用，提醒其他人你非变不可。注意安全，这种操作少做… 提前变道，利人利己。</li>
<li>如果在路口没变到自己需要走的道，还是继续开吧，绕一绕，万一被抓拍好几百就出去了，还有危险。</li>
<li>变道的时候，新手与老手最大的区别在于：<strong>变道要加速</strong>。变道不要影响到其他人，如果你踩着刹车减速变道，至少会影响两条车道正常行驶的车流，是非常错误的操作。</li>
<li>到公司地库门口了，如果手动大灯的可以开启近光灯，自动大灯的土豪可省略。地库开灯是最安全的，提醒别人照亮自己。</li>
<li>如有狭窄的通道，记得大弯早打，从一个更大的角度去入弯，操作更方便，也好调整。通过后视镜观察车的两边，不要磕碰墙。</li>
<li>找到合适的车位，车头略微向外打，倒车入库。</li>
<li>倒车会比一头栽进去更方便，好好练习倒车技巧，其实很简单。假设自己站在车外指挥车倒车，向往左方向盘就往左，想往右方向盘就往右，方向一致。</li>
<li><strong>倒车R到轻微装上车位限位器，挂空挡，车略微前溜卸去发动机的力量，拉手刹，挂P档。</strong></li>
<li>熄火，收耳朵，锁车。</li>
<li>下班走高速，提前办理ETC卡，节约大量时间，还有打折小羊毛。</li>
<li>过ETC闸时跟车不要太近，谨防前车白痴或者卡损坏过不去要倒车。</li>
<li>过闸后驶入匝道，加速；在并入主路前，迅速加速至车流速度（地板油来一发），前面说过，低速并入简直就是找死+害人。</li>
<li>高速雨天最好在中间车道跑，不太容易汇聚大量水。</li>
<li>高速一定要注意跟车距离，比如跑100km/h至少留100米。</li>
<li>交通条件好时最好跑到限速，这样通行效率最好，大家都是交通参与者。车多就好好跟车。</li>
<li>如果空旷时开不到那么快，根据自己水平选择合适最低限速的车道。不要90速度占着最左道。</li>
<li>在下高速的路口前最好不要在最右车道行驶，并入最左或中间，谨防脑残最后一刻拉你下黄泉。</li>
<li>高速是“<strong>让速不让道</strong>”的最正确执行场所，一定要稳住方向盘。要不傻X把你晃到墙上去，人家呵呵丢下一句“傻逼”就跑了。命是自己的。</li>
<li>高速如果有狗（甚至人），如果后方车辆太近无法闪避，那么就轻踩刹车，稳住方向撞过去。大多数轿车的麋鹿测试成绩在80km/h左右，太高速度+错误操作真的会翻车的。</li>
<li>高速，特别晚上超越大卡车时，提前闪远光（白天按喇叭）提醒司机要超车了，然后深踩油门尽快超过去，不要慢悠悠并行。</li>
<li>下高速也走ETC道，几乎都在收费站的最左边。</li>
<li>快到家了，进地库前同样打开近光灯。车库门口、小区道路，缓行让行。</li>
<li>停车如果没有前雷达，用近光灯打在墙上的角度来大致预判下前方还有多少距离，很有用。</li>
<li>同样停车、锁车，开门记得不要碰撞隔壁车辆。</li>
<li>上楼回家，好好开车节约了1个多小时，完美一天。</li>
</ol>
<h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><ul>
<li><strong>预判</strong>。从新手开始就要好好练习了。要注意马路上别的车的动向，观察他们打灯的时机，歪来歪去的走位，加速减速的趋势，这样才能在新手的时候就安全驾驶，练就黄金右脚，成就省油大法，最终才能又快又稳。</li>
<li>↑ 跟车时可以看远一点，比如旁边车道前方开始刹车了，或者通过前车后车窗看到前前车中间刹车灯亮了，就可以提前松油门了，视情况轻踩刹车。这样就能做到尽可能的前瞻与平顺。</li>
<li><strong>跟车距离</strong>。别太远，太远别别的车插队；别太近，太近了刹车反应时间太短会追尾。用上面练就的好预判，用油门控制跟车距离，做到少踩刹车，既省油，又平稳，还不晃后车的眼。调整自己的舒适位置，让别车觉得插进来也不划算，相安无事。</li>
<li>旁边车道如果堵住了你开车穿过去的时候，一定要小心，做好准备，说不定哪个哪个脑抽的等得不耐烦了就一把方向盘钻出来… </li>
<li>总而言之，视线不清楚的时候一定要小小小心再小心，减速慢行；在视野良好的情况下再加速前行。</li>
<li>窄道会车，先将车头靠向外侧，不用太近，然后观察后视镜，依靠后视镜去判断车离外侧有多远，然后逐渐一点点靠近。同理，很多时候目视前方不一定好判断距离，通过后视镜能更清楚地看到车的方位。</li>
<li>说明书一定要看啊，厂家把各种需要注意的问题都写在里面了，以及车出了一些简单的问题都可以找到解决方案。特别是保养项目，很多新手被4S店坑，都是被忽悠加上了很多不需要的项目，而每个周期需要做哪些其实说明书里面写得很清楚。提车第一次开车前至少也要把简明手册看完。</li>
<li>有些耗材可以自己打理，能节约一大笔钱。例如雨刷片和空滤机滤，自己偶尔电商打折屯着换换，比保养的时候换便宜太多了。出保后可以考虑更高级的机油？</li>
<li>中国的路况… 一定要买一个行车记录仪防身，爱人爱己… </li>
<li>如果发生交通事故，报保险报122交警，如果不是很有底，不要私了。</li>
<li>如果不幸撞了人，警察来和稀泥，千万不要认全责，说什么让保险赔医药费。一定要出正确的责任认定书，即使要自己贴钱，要不遇到老赖，特别老了的老赖，认了全责后真的是无底洞。切记。</li>
<li>最后再说一遍，谨慎驾驶，开车省的是时间和方便，但你驾驶的是一吨多的杀人机器，一定要小心再小心，不要把自己或别人未来的幸福在某一瞬间毁掉。</li>
</ul>
<h1 id="寄语"><a href="#寄语" class="headerlink" title="寄语"></a>寄语</h1><p>愿大家都成为合格的驾驶员。既充分节约自己的时间，提高效率；也成为优秀的交通参与者，不为社会添堵。<br><strong>生命冇take two，请小心演绎！</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里的“老司机”，咳咳，是真正意义上的老司机…&lt;br&gt;这篇水文，既用以阶段性警醒自己开车不要犯错，同时方便与亲朋好友深刻交流入门及上路心得，也可以分享给有需要的人士。&lt;br&gt;既然是水文，就充分发扬“水”的特点，从选车购车、基础知识、重要前戏、实际操作四个方面疯狂BB起来…&lt;/p&gt;
    
    </summary>
    
    
      <category term="水" scheme="http://damon-wenc.github.io/blog/tags/%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>蜜月巴厘岛</title>
    <link href="http://damon-wenc.github.io/blog/2017/05/14/honey-moon-in-bali-island/"/>
    <id>http://damon-wenc.github.io/blog/2017/05/14/honey-moon-in-bali-island/</id>
    <published>2017-05-14T10:36:00.000Z</published>
    <updated>2017-05-21T04:50:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>4月初小长假，终于迎来我们的蜜月行啦，两人一起的第一次出国长途旅行，目的地是跨越赤道的甜蜜圣地–巴厘岛~</p>
<p>本文就是超长流水账，趁着记忆还没太模糊，记录下蜜月的点点滴滴，以便长久以后还能乐呵着回忆。</p>
<a id="more"></a>
<ul>
<li>4月1日</li>
</ul>
<p>出发前一晚，下班后就收拾打包东西，衣服、装备、电话卡进进出出箱子，还算提早收拾好了行李，结果却因为往iPad里导入路上看的电影速度太慢导致竟然熬到了一点多，累die。</p>
<ul>
<li>4月2日</li>
</ul>
<p>dada，出发咯。拖着沉重的箱子，因为出门又晚了，又被妮妮殴打了一顿，没剩多少时间了。掏出手机叫了个专车，大哥还算面善，不过有些自言自语的叨叨，结果没走几步，天知道在想什么，明明导航一条直路说着继续直行，大哥却心道该拐弯了，竟然从主路，沿着辅导往主道的出口拐了进去，我惊了个呆！！辅导刚好有辆小车高速驶来，哐当一下就撞上了！fuck。五脸懵逼了几秒，大哥骂骂咧咧的下车了（话说明明是自己不守交通规则），一看幸好另一辆车是撞到了副驾驶，门都撞凹了好大一截，要是再往后半米，就是我遭殃了。可是船票不等人啊，下车后妮妮让我拿行李赶紧，于是忐忑着喊回情绪不稳定的大哥，颤抖着提下了行李，到路边换了辆的士跑路了，哎（我出车祸几率挺高的？好几次险情了，怕怕啊）。</p>
<p>终于赶到福永码头，换乘小轮船，快速驶向香港机场。到了后，离起飞还有快2小时，于是吃了个饭，合了个照~ [pic] 还有个趣事，妮妮去换机票时，因为自选的宽敞座位在应急出口旁边，没想到空姐开口一段快速的”Are you pregnant？”，妮妮茫然地回头看我，我懵逼了一下后翻译给了她，然后空姐就拒绝给我们坐这个位置了，理由是“英语完全不会”（挖哈哈哈，其实还是会一点，太突然懵逼了），给我们换了个座位。太丢人了，可以黑妮妮很久了，挖哈哈。出发咯，中转站→吉隆坡。4个小时的旅途很无聊，幸好带了iPad，看了两集The Walking Dead。</p>
<p>在吉隆坡国际机场逗留等待转机了几个小时，吃了个当地麻辣面，呃，味道还可以，咖喱味。短暂休息后下午5点搭上了前往巴厘岛的航班，go go。</p>
<p>来之前就知道4月是巴厘岛好天气的边缘，气象不是特别稳，可能会经常有雨（后面几天果然就只有一天是没有中途插播阵雨的），结果在估计到巴厘岛还有一小时的路程时，航班开始剧烈抖动起来了，虽然只大抖了几下，不过偶尔还剧烈抖一下，妮妮都快吓哭了。隔壁的印尼大叔人很好，抽空微笑着安慰我”It’s OK, don’t worry.”，但还是非常害怕啊！降落时恶劣天气也果然验证了，发现我们的飞机在天上画着个大圈，绕了一圈又一圈，偶尔抖动，窗外还有划破天际的闪电。记得预期抵达时间是10点，可是一直绕啊绕绕到11点才终于在暴雨中降落了，全机乘客集体鼓掌… </p>
<p>下机安检后出门换了300万印尼盾，感觉自己好有钱。暴雨中出门打了出租，到了前两晚的豪华度假村INAYA Putri Bali。抵达酒店后，在窗前的游泳池游了几个来回，冲了澡，已经一点多就赶紧休息了，在这里还有接下来两天的休闲时光。</p>
<p><em>to be continued</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;4月初小长假，终于迎来我们的蜜月行啦，两人一起的第一次出国长途旅行，目的地是跨越赤道的甜蜜圣地–巴厘岛~&lt;/p&gt;
&lt;p&gt;本文就是超长流水账，趁着记忆还没太模糊，记录下蜜月的点点滴滴，以便长久以后还能乐呵着回忆。&lt;/p&gt;
    
    </summary>
    
    
      <category term="水" scheme="http://damon-wenc.github.io/blog/tags/%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>16已去，17加油</title>
    <link href="http://damon-wenc.github.io/blog/2017/01/02/end-of-2016-start-of-2017/"/>
    <id>http://damon-wenc.github.io/blog/2017/01/02/end-of-2016-start-of-2017/</id>
    <published>2017-01-02T11:05:50.000Z</published>
    <updated>2017-05-14T09:55:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>每当顺着时间走时，只觉得时间走得挺快，每天紧巴巴的追着时间的脚步；没想到回头才发现辣么的触目惊心。</p>
<p>16年发生了很多很多的事，流水账是：</p>
<ul>
<li>1月很悲伤</li>
<li>2月过年、提亲！</li>
<li>3月、4月找工作、打击、辞职</li>
<li>5月新工作，新语言、新平台、新方向、强力同事</li>
<li>6~12 加班、学习loop</li>
</ul>
<p>回首往前的日子，感慨良多，无数不管是辛苦的、委屈的、自找的、不足的，都希望牢记于心以佐将来，不负以往。</p>
<a id="more"></a>
<p>也定下新年的目标和计划，希望年底的时候一定能完成，现在身上的担子更多了，成长也要加速了。</p>
<ol>
<li>求婚 &amp; 结婚 （@马妮妮~）</li>
<li>1111囤的茫茫多书尽快过一遍，技能相关精度细品</li>
<li>阅读几个技能相关的开源代码，并理解吃透</li>
<li>提高思考的深度，须看有所想</li>
<li>刷一些算法题，做好准备，期望能去更大的平台，有更大的发展</li>
</ol>
<p>以上计划，自勉，谨记，加油。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每当顺着时间走时，只觉得时间走得挺快，每天紧巴巴的追着时间的脚步；没想到回头才发现辣么的触目惊心。&lt;/p&gt;
&lt;p&gt;16年发生了很多很多的事，流水账是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1月很悲伤&lt;/li&gt;
&lt;li&gt;2月过年、提亲！&lt;/li&gt;
&lt;li&gt;3月、4月找工作、打击、辞职&lt;/li&gt;
&lt;li&gt;5月新工作，新语言、新平台、新方向、强力同事&lt;/li&gt;
&lt;li&gt;6~12 加班、学习loop&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回首往前的日子，感慨良多，无数不管是辛苦的、委屈的、自找的、不足的，都希望牢记于心以佐将来，不负以往。&lt;/p&gt;
    
    </summary>
    
    
      <category term="水" scheme="http://damon-wenc.github.io/blog/tags/%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>深圳摇号概率</title>
    <link href="http://damon-wenc.github.io/blog/2016/12/04/license-plate-lottery-chance/"/>
    <id>http://damon-wenc.github.io/blog/2016/12/04/license-plate-lottery-chance/</id>
    <published>2016-12-04T11:05:50.000Z</published>
    <updated>2016-12-05T14:37:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>额，摇号难，难于上青天，深圳本月有598459人一起摇2933个指标，概率跌破0.5%了… wtf。于是乎，来水一个小程序，计算一下多少个月内能摇到号的概率。</p>
<p>假定中标的概率为0.45%吧（当前是0.49%，但目测摇号大军以每个月1w5+的速度激增，本月更是高达1w8… 感觉离0.4%都已经不远了，取个中间值），那么显而易见：</p>
<ol>
<li>这个月内摇不到的概率是(1 - 0.45%)，摇到号的概率是0.45% <del>(1 - (1 - 0.45%))</del>；</li>
<li>2个月内摇不到号的概率是连续两次落在摇不到区间，为(1 - 0.45%)²；摇到的概率则为(1 - (1 - 0.45%)²)</li>
<li>同理，3个月都摇不到是(1 - 0.45%)³，能摇到是(1 - (1 - 0.45%)³)</li>
</ol>
<p>可见<br>连续n个月摇不到的概率是(1 - 0.45%) ** n<br>期间能摇到的概率是(1 - (1 - 0.45%) ** n)</p>
<p>到这里小循环也就呼之欲出了，代码很简单，如下：</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">yaohao_rate</span><span class="params">()</span>:</span></div><div class="line">    Got_It      = <span class="number">0.0045</span></div><div class="line"></div><div class="line">    <span class="keyword">print</span> <span class="string">"\n\n"</span> + <span class="string">"*"</span> * <span class="number">66</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"  \t单身狗寂寞摇\t\t\t两个人摇啊摇"</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">101</span>):</div><div class="line">        <span class="keyword">print</span> <span class="string">"%3d个月内摇到号的概率是%.3f%%"</span> %(i, (<span class="number">1</span> - (<span class="number">1</span> - Got_It) ** i) * <span class="number">100</span>),</div><div class="line">        <span class="keyword">print</span> <span class="string">"\t"</span>,</div><div class="line">        <span class="keyword">print</span> <span class="string">"%3d个月内摇到号的概率是%.3f%%"</span> %(i, (<span class="number">1</span> - (<span class="number">1</span> - Got_It * <span class="number">2</span>) ** i) * <span class="number">100</span>)</div><div class="line">        <span class="keyword">if</span> i % <span class="number">12</span> == <span class="number">0</span>:</div><div class="line">            <span class="keyword">print</span> <span class="string">"~"</span> * <span class="number">25</span>,</div><div class="line">            <span class="keyword">print</span> <span class="string">"%2d年过去了"</span> %(i/<span class="number">12</span>),</div><div class="line">            <span class="keyword">print</span> <span class="string">"~"</span> * <span class="number">25</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    yaohao_rate()</div></pre></td></tr></table></figure>
<p>最后还加了个“单身汪”vs“小俩口”的对比~ 然而结果还是令人崩溃滴</p>
<p>部分输出如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">******************************************************************</div><div class="line">               单身狗寂寞摇          两个人摇啊摇</div><div class="line">  1个月内摇到号的概率是0.450%       1个月内摇到号的概率是0.900%</div><div class="line">  2个月内摇到号的概率是0.898%       2个月内摇到号的概率是1.792%</div><div class="line">  3个月内摇到号的概率是1.344%       3个月内摇到号的概率是2.676%</div><div class="line">  4个月内摇到号的概率是1.788%       4个月内摇到号的概率是3.552%</div><div class="line">  .</div><div class="line">  .</div><div class="line"> 12个月内摇到号的概率是5.268%      12个月内摇到号的概率是10.281%</div><div class="line"> ~~~~~~~~~~~~~~~~~~~~~~~~~  1年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 13个月内摇到号的概率是5.695%      13个月内摇到号的概率是11.089%</div><div class="line"> .</div><div class="line"> .</div><div class="line"> 24个月内摇到号的概率是10.259%     24个月内摇到号的概率是19.505%</div><div class="line">~~~~~~~~~~~~~~~~~~~~~~~~~  2年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 25个月内摇到号的概率是10.663%     25个月内摇到号的概率是20.230%</div><div class="line"> .</div><div class="line"> .</div><div class="line"> 36个月内摇到号的概率是14.987%     36个月内摇到号的概率是27.781%</div><div class="line">~~~~~~~~~~~~~~~~~~~~~~~~~  3年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 37个月内摇到号的概率是15.370%     37个月内摇到号的概率是28.431%</div><div class="line"> .</div><div class="line"> .</div><div class="line"> 48个月内摇到号的概率是19.466%     48个月内摇到号的概率是35.206%</div><div class="line">~~~~~~~~~~~~~~~~~~~~~~~~~  4年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 49个月内摇到号的概率是19.828%     49个月内摇到号的概率是35.789%</div><div class="line"> .</div><div class="line"> .</div><div class="line"> 60个月内摇到号的概率是23.709%     60个月内摇到号的概率是41.867%</div><div class="line">~~~~~~~~~~~~~~~~~~~~~~~~~  5年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 61个月内摇到号的概率是24.052%     61个月内摇到号的概率是42.391%</div><div class="line"> .</div><div class="line"> .</div><div class="line"> 72个月内摇到号的概率是27.728%     72个月内摇到号的概率是47.844%</div><div class="line">~~~~~~~~~~~~~~~~~~~~~~~~~  6年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 73个月内摇到号的概率是28.053%     73个月内摇到号的概率是48.314%</div><div class="line"> .</div><div class="line"> .</div><div class="line"> 84个月内摇到号的概率是31.535%     84个月内摇到号的概率是53.206%</div><div class="line">~~~~~~~~~~~~~~~~~~~~~~~~~  7年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 85个月内摇到号的概率是31.843%     85个月内摇到号的概率是53.627%</div><div class="line"> .</div><div class="line"> .</div><div class="line"> 96个月内摇到号的概率是35.142%     96个月内摇到号的概率是58.017%</div><div class="line">~~~~~~~~~~~~~~~~~~~~~~~~~  8年过去了 ~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line"> 97个月内摇到号的概率是35.434%     97个月内摇到号的概率是58.395%</div><div class="line"> 98个月内摇到号的概率是35.725%     98个月内摇到号的概率是58.770%</div><div class="line"> 99个月内摇到号的概率是36.014%     99个月内摇到号的概率是59.141%</div><div class="line">100个月内摇到号的概率是36.302%    100个月内摇到号的概率是59.508%</div></pre></td></tr></table></figure></p>
<p>这摇号果然是个杯具啊，概率实在太小，两个人摇也就比单身多了一点点机会。还是希望老天眷顾，同时赶快赚钱适时拍牌吧，fighting.</p>
<h2 id="项目页链接"><a href="#项目页链接" class="headerlink" title="项目页链接"></a><a href="http://damon-wenc.github.io/Small-Data/">项目页链接</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;额，摇号难，难于上青天，深圳本月有598459人一起摇2933个指标，概率跌破0.5%了… wtf。于是乎，来水一个小程序，计算一下多少个月内能摇到号的概率。&lt;/p&gt;
&lt;p&gt;假定中标的概率为0.45%吧（当前是0.49%，但目测摇号大军以每个月1w5+的速度激增，本月更是高达1w8… 感觉离0.4%都已经不远了，取个中间值），那么显而易见：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这个月内摇不到的概率是(1 - 0.45%)，摇到号的概率是0.45% &lt;del&gt;(1 - (1 - 0.45%))&lt;/del&gt;；&lt;/li&gt;
&lt;li&gt;2个月内摇不到号的概率是连续两次落在摇不到区间，为(1 - 0.45%)²；摇到的概率则为(1 - (1 - 0.45%)²)&lt;/li&gt;
&lt;li&gt;同理，3个月都摇不到是(1 - 0.45%)³，能摇到是(1 - (1 - 0.45%)³)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可见&lt;br&gt;连续n个月摇不到的概率是(1 - 0.45%) ** n&lt;br&gt;期间能摇到的概率是(1 - (1 - 0.45%) ** n)&lt;/p&gt;
&lt;p&gt;到这里小循环也就呼之欲出了，代码很简单，如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="水" scheme="http://damon-wenc.github.io/blog/tags/%E6%B0%B4/"/>
    
      <category term="Python" scheme="http://damon-wenc.github.io/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>再爬一个更全的高清电影资源站</title>
    <link href="http://damon-wenc.github.io/blog/2015/11/08/save-another-hd-movie-website/"/>
    <id>http://damon-wenc.github.io/blog/2015/11/08/save-another-hd-movie-website/</id>
    <published>2015-11-08T15:44:01.000Z</published>
    <updated>2016-12-04T14:05:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>发现了另一个高清网站，名为<a href="http://gaoqing.la" target="_blank" rel="external">高清网</a>，挺好的，资源比上一个强多了，打算故技重施保存下… </p>
<p>本以为简单的修改下爬取规则就好了，结果发现了下面的问题：</p>
<ol>
<li><a href="http://gaoqing.la" target="_blank" rel="external">高清网</a>限制了爬虫的获取，所以Google了下，需要增加一个表头来模拟浏览器登录，解决了这个问题。</li>
<li>呃…… 蛋疼的事儿来了，也不知道是故意还是无意的，这网站的网页结构真是千变万化，各种规则随手拈来，新旧网页结构也不太一样，所以过滤起来真是麻烦，最后还是有点问题，已经尽力了。留个教训吧，以后如果网站规则太难以捉摸，还是量力而行比较好。。。</li>
</ol>
<a id="more"></a>
<p>技术没有什么变化，所以参照上一篇功能，就不写了哈。</p>
<p>结果也上传了：gaoqingla_info.html，同理，在GitHub打开怪怪的，下载后排版就正常了。</p>
<p>打开大致效果是这样的：<br><img src="http://oh8zuwlyg.bkt.clouddn.com/427AB6EA-4DB6-4D05-AA5D-2BF571A389D2.jpeg" alt="gaoqingla_info.html"><br>蓝色链接即为磁力链，剩下的你懂的。</p>
<p>同样再次感谢这些站点站长及大家的辛勤付出。  </p>
<h2 id="项目页链接"><a href="#项目页链接" class="headerlink" title="项目页链接"></a><a href="http://damon-wenc.github.io/Small-Data/">项目页链接</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;发现了另一个高清网站，名为&lt;a href=&quot;http://gaoqing.la&quot;&gt;高清网&lt;/a&gt;，挺好的，资源比上一个强多了，打算故技重施保存下… &lt;/p&gt;
&lt;p&gt;本以为简单的修改下爬取规则就好了，结果发现了下面的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://gaoqing.la&quot;&gt;高清网&lt;/a&gt;限制了爬虫的获取，所以Google了下，需要增加一个表头来模拟浏览器登录，解决了这个问题。&lt;/li&gt;
&lt;li&gt;呃…… 蛋疼的事儿来了，也不知道是故意还是无意的，这网站的网页结构真是千变万化，各种规则随手拈来，新旧网页结构也不太一样，所以过滤起来真是麻烦，最后还是有点问题，已经尽力了。留个教训吧，以后如果网站规则太难以捉摸，还是量力而行比较好。。。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damon-wenc.github.io/blog/tags/Python/"/>
    
      <category term="Spider" scheme="http://damon-wenc.github.io/blog/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>从电影网站爬高清资源</title>
    <link href="http://damon-wenc.github.io/blog/2015/10/15/save-hd-resource-from-website/"/>
    <id>http://damon-wenc.github.io/blog/2015/10/15/save-hd-resource-from-website/</id>
    <published>2015-10-15T11:20:39.000Z</published>
    <updated>2016-12-04T14:04:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>想看好电影，新的电影可以尽可能地在影院观看，贡献票房，老的经典大片就只有在网上，咳咳，搜一下资源了。发现一个很好的网站：<a href="http://www.xdytt.com" target="_blank" rel="external">小电影天堂</a>，真心希望它能持久并坚挺，不过它的同行倒是已经有数不清的先烈牺牲了。所以这里打算利用下Python的爬虫，保存一部分电影资源下来，以备后用。</p>
<p>采用的且基于技术主要有:</p>
<ol>
<li>Python 2.7.10(MacOS X 默认)</li>
<li>lxml.html 及 xpath</li>
<li>gevent 及 pool</li>
</ol>
<a id="more"></a>
<p>由于之前熟悉的是re正则表达式及多线程/进程方式，这次想用不同的技术尝试一下，决定从<a href="http://www.zhihu.com/question/24590883" target="_blank" rel="external">知乎</a>的讨论中挑选gevent作高效率的协程，lxml来爬取数据。<br>事实证明确实不错，效率嘛.. 在熟悉了之后是挺高的，就是这学习曲线有点陡，没入门前环境配置、字体编码、文档、博客都是花了不少时间啃的，不过入门后还挺好，新方法效率的确高。</p>
<p>需要注意的点有：</p>
<ol>
<li>因为是爬别人的网站，所以要注意好心人可能是建站按流量走的，所以尽量不要反复无意义的去爬网页，且爬的时候控制下速度，别丧心病狂地开多线程… 要做到良心限速。</li>
<li>可能是网速限制，或者是网站限制连接数，发现在用gevent爬网页在同时“线程数”比较多的时候，会报gevent的诡异的错误。由于spawn没有连接数限制，所以切换到Pool，来限制下连接数。在家里测试6M网络最多开40路同时就能跑满。</li>
<li>同时在打开网页调用urllib2时也要相应的增加超时时间，协程多了相对有点慢。</li>
</ol>
<p>随脚本一起上传了结果文档：movie_info.html(<em>另存为后用浏览器打开格式就清晰了</em>)。</p>
<p>大致的效果如下：<br><img src="http://oh8zuwlyg.bkt.clouddn.com/screenshot.png" alt="screenshot"></p>
<p>发现速度还不错，从3000多个链接爬675个6.0分以上的1080P电影下来一共花费10分钟多一点，蹲个坑就搞定了… 而且是在限速了的情况下。攒着慢慢看 XD</p>
<p>再次感谢<a href="http://www.xdytt.com" target="_blank" rel="external">小电影天堂</a>的高清资源</p>
<h2 id="项目页链接"><a href="#项目页链接" class="headerlink" title="项目页链接"></a><a href="http://damon-wenc.github.io/Small-Data/">项目页链接</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;想看好电影，新的电影可以尽可能地在影院观看，贡献票房，老的经典大片就只有在网上，咳咳，搜一下资源了。发现一个很好的网站：&lt;a href=&quot;http://www.xdytt.com&quot;&gt;小电影天堂&lt;/a&gt;，真心希望它能持久并坚挺，不过它的同行倒是已经有数不清的先烈牺牲了。所以这里打算利用下Python的爬虫，保存一部分电影资源下来，以备后用。&lt;/p&gt;
&lt;p&gt;采用的且基于技术主要有:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Python 2.7.10(MacOS X 默认)&lt;/li&gt;
&lt;li&gt;lxml.html 及 xpath&lt;/li&gt;
&lt;li&gt;gevent 及 pool&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damon-wenc.github.io/blog/tags/Python/"/>
    
      <category term="Spider" scheme="http://damon-wenc.github.io/blog/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>腾讯后台职位技能关键词热度</title>
    <link href="http://damon-wenc.github.io/blog/2014/11/19/tencent-jd-keywords/"/>
    <id>http://damon-wenc.github.io/blog/2014/11/19/tencent-jd-keywords/</id>
    <published>2014-11-19T10:45:02.000Z</published>
    <updated>2016-12-04T14:15:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>目的是想找出腾讯SNG部后台招聘所需要哪些技能, 期待针对性学习一下。</p>
<p>程序通过遍历所有<a href="http://hr.tencent.com/position.php?keywords=SNG+%E5%90%8E%E5%8F%B0&amp;lid=2218&amp;tid=0" target="_blank" rel="external">SNG+深圳+后台</a>招聘网页, 对其中skills_array数组中的关键字（十分偷懒且不严谨的做法）进行热度记录, 最后按照热度从低到高的顺序排列出来。努力提高匹配度咯。</p>
<p>下面是程序输出:</p>
<a id="more"></a>
<blockquote>
<p>31 SNG positions have been found. Please wait a little while…<br>skills heat are as below:<br>heat [0]     skill: storm<br>heat [0]     skill: 容灾<br>heat [0]     skill: 虚拟化数据库<br>heat [0]     skill: 富媒体<br>heat [0]     skill: 安全逻辑<br>heat [0]     skill: 索引系统<br>heat [0]     skill: 安全漏洞<br>heat [0]     skill: 网络攻击<br>heat [0]     skill: 网络并发<br>heat [0]     skill: 实时计算<br>heat [0]     skill: 广告变现<br>heat [0]     skill: 广告后台<br>heat [1]     skill: nosql<br>heat [1]     skill: hadoop<br>heat [1]     skill: spark<br>heat [1]     skill: lbs<br>heat [1]     skill: 自动化<br>heat [1]     skill: 存储架构<br>heat [1]     skill: 实时推荐<br>heat [1]     skill: 后台业务开发<br>heat [1]     skill: 无线互联网<br>heat [1]     skill: 计算机基础结构<br>heat [2]     skill: 重构<br>heat [2]     skill: 云计算<br>heat [2]     skill: 网络处理<br>heat [2]     skill: 大容量网络<br>heat [3]     skill: 海量数据<br>heat [3]     skill: 数据分析<br>heat [3]     skill: 分布式计算<br>heat [3]     skill: 互联网应用协议<br>heat [4]     skill: 脚本<br>heat [4]     skill: 压力<br>heat [4]     skill: 数据处理<br>heat [4]     skill: 通信系统<br>heat [4]     skill: 大容量通信<br>heat [4]     skill: 互联网业务<br>heat [5]     skill: 高可靠<br>heat [5]     skill: 大数据<br>heat [5]     skill: 精通c++<br>heat [5]     skill: 逻辑思维<br>heat [5]     skill: 进程间通讯<br>heat [6]     skill: 高并发<br>heat [7]     skill: 稳定<br>heat [9]     skill: 好学<br>heat [9]     skill: 高性能<br>heat [9]     skill: 面向对象<br>heat [9]     skill: 软件工程<br>heat [10]    skill: 网络安全<br>heat [11]    skill: python<br>heat [11]    skill: 主动<br>heat [11]    skill: 设计模式<br>heat [12]    skill: mysql<br>heat [12]    skill: 分布式<br>heat [14]    skill: tcp/ip<br>heat [15]    skill: 数据结构<br>heat [18]    skill: 操作系统<br>heat [19]    skill: 架构<br>heat [22]    skill: 优化<br>heat [24]    skill: 沟通<br>heat [26]    skill: c/c++<br>heat [29]    skill: linux<br>heat [31]    skill: cdn<br>heat [31]    skill: 经验</p>
</blockquote>
<p>这个..实用性来说肯定是自娱自乐，为了提高匹配努力吧。</p>
<hr>
<p><em>—update—</em></p>
<p><em>最佳做法还是爬虫后用知名Python库<a href="https://github.com/fxsjy/jieba" target="_blank" rel="external">jieba</a>来做关键字分割，这样才能得到全部有效的关键字，以后再说吧，或许后面的项目会用到。</em></p>
<h2 id="项目页链接"><a href="#项目页链接" class="headerlink" title="项目页链接"></a><a href="http://damon-wenc.github.io/Small-Data/">项目页链接</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;目的是想找出腾讯SNG部后台招聘所需要哪些技能, 期待针对性学习一下。&lt;/p&gt;
&lt;p&gt;程序通过遍历所有&lt;a href=&quot;http://hr.tencent.com/position.php?keywords=SNG+%E5%90%8E%E5%8F%B0&amp;amp;lid=2218&amp;amp;tid=0&quot;&gt;SNG+深圳+后台&lt;/a&gt;招聘网页, 对其中skills_array数组中的关键字（十分偷懒且不严谨的做法）进行热度记录, 最后按照热度从低到高的顺序排列出来。努力提高匹配度咯。&lt;/p&gt;
&lt;p&gt;下面是程序输出:&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damon-wenc.github.io/blog/tags/Python/"/>
    
      <category term="Spider" scheme="http://damon-wenc.github.io/blog/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>简易自动化测试框架</title>
    <link href="http://damon-wenc.github.io/blog/2014/05/08/simple-auto-test-framework/"/>
    <id>http://damon-wenc.github.io/blog/2014/05/08/simple-auto-test-framework/</id>
    <published>2014-05-08T03:11:11.000Z</published>
    <updated>2016-12-04T14:14:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Auto-Test-Framework"><a href="#Auto-Test-Framework" class="headerlink" title="Auto-Test-Framework"></a>Auto-Test-Framework</h1><h2 id="English-version"><a href="#English-version" class="headerlink" title="English version"></a>English version</h2><h3 id="Keywords"><a href="#Keywords" class="headerlink" title="Keywords"></a>Keywords</h3><p>An automatic &amp; light mass-clients test framework based on Python &amp; HTML; python do the logic, and web(HTML) display it.</p>
<h3 id="description"><a href="#description" class="headerlink" title="description"></a>description</h3><p>This is not a complete auto-test system, it’s just a upper layer test framework, sort of a ‘Control Center’, allow you to master a mass of devices; whatever tests you are about to run on your device is not included, but this framework will help you senting ‘start/stop’ commands via SSH, and collecting test logs to monitor test progress, and eventually the web will show the test results to you in a clear way.</p>
<a id="more"></a>
<h3 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h3><p>The code is less than 600 lines, the structure of the framework is like thils:<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/structure.png" alt="structure"></p>
<ul>
<li><strong>web_tornado.py</strong> is the base, it’s powered by <a href="http://www.tornadoweb.org/en/stable/" target="_blank" rel="external">tornado</a>, a powerful library of Python; it process requests like ‘GET index/init/run/stop/open_log’;</li>
<li><strong>GLOBAL.py</strong> saves global variables;</li>
<li><strong>init_by_ping.py</strong> detecting whether your devices are online by fetch the return value of ‘ping’ cmd;</li>
<li><strong>run_test.py</strong> send commands/retrieve log/analysis log with multi-threading;</li>
<li><strong>ssh.py</strong> connecting to your devices with ‘plink’ tool, with a mechanism of re-connect;</li>
<li><strong>analysis.py</strong> analysis retrieved log by matching ‘error keywords’</li>
</ul>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><ol>
<li>root page: this is the page shown up after you run web_tornado.py<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/index.jpg" alt="index"><br>You can see we could monitor 100 or more devices here.</li>
<li>step 2, click the ‘init’ button<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/init.jpg" alt="init"><br>Now there are 80 devices online, with color green, and the other 20 devices are offline, with color grey</li>
<li>step 3, click the ‘run’ button<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/run.jpg" alt="run"><br>Now the program begins to run, error occurred on any devices will turn the color of the devices from green to red, and logs from those particular devices will not longer be updated. So if you click the table url, if the device is OK, as green, the latest folder will shown up automatically; while if you click the wrong ones, as red, the log of the failed round will shown up.</li>
<li>step 4, if you want to finish the test, click the ‘stop’ button.</li>
</ol>
<h3 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h3><p>Please watch the code by urself :D</p>
<h3 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h3><p>The code is tested with Python version 2.7 on Windows. All you need to install is tornado library, please follow the <a href="http://www.tornadoweb.org/en/stable/#installation" target="_blank" rel="external">official guide</a>. And if your OS is *nix, you may rewrite the ssh.py module with more properly libraries, like paramiko.</p>
<h3 id="Last-words"><a href="#Last-words" class="headerlink" title="Last words"></a>Last words</h3><p>This is just a light&amp;clear upper level control framework, what you are intending to do on your device is not included,  ‘send’ -&gt; ‘run’ -&gt; ‘retrieve log’ -&gt; ‘analysis log’ is a complete loop.<br>This is a idea about ‘auto-test on mass of devices’, how you are about to implement it or what, that is for you to decide. XD</p>
<h2 id="中文说明"><a href="#中文说明" class="headerlink" title="中文说明"></a>中文说明</h2><h3 id="一句话综述"><a href="#一句话综述" class="headerlink" title="一句话综述"></a>一句话综述</h3><p>这是一个由Python&amp;HTML构建的轻量级大规模自动化测试框架; Python作逻辑层, HTML来显示.</p>
<h3 id="设计定位"><a href="#设计定位" class="headerlink" title="设计定位"></a>设计定位</h3><p>这不是是一个完整的自动化测试系统, 仅仅是一个上层的测试框架, 类似于一个控制中心, 下层的系统内的各种测试并不包含在内, 但是可以通过ssh来发送’start’命令, 通过收集’日志’接口来获取状态log, 等等来完成整套测试. 同时HTML(web)能清晰直白地显示出测试结果, 方便测试员观察.</p>
<h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3><p>整套代码不到600行, 大体框架如下图<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/structure.png" alt="structure"></p>
<ul>
<li><strong>web_tornado.py</strong>是主函数, 由<a href="http://www.tornadoweb.org/en/stable/" target="_blank" rel="external">tornado</a>这个库发力, 主要处理index/init/run/stop/open log各个请求动作</li>
<li><strong>GLOBAL.py</strong>保存全局变量</li>
<li><strong>init_by_ping.py</strong>用抓取ping返回值的方式判断设备是否存活</li>
<li><strong>run_test.py</strong>采用多线程的方式处理发送命令/抓取log/分析log的操作</li>
<li><strong>ssh.py</strong>藉由plink连接各设备, 有重连机制</li>
<li><strong>analysis.py</strong>用抓取错误关键字的方式分析log</li>
</ul>
<h3 id="界面示例"><a href="#界面示例" class="headerlink" title="界面示例"></a>界面示例</h3><ol>
<li>首先是运行web_tornado.py后的根页面<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/index.jpg" alt="index"><br>这里展示了对100台设备进行管理.</li>
<li>第二步, 敲击init键<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/init.jpg" alt="init"><br>例如这是前80台设备在线, 以绿色标识; 灰色设备是不在线.</li>
<li>第三步, 敲击run键<br><img src="https://github.com/Damon-wenc/Auto-Test-Framework/raw/master/examples/run.jpg" alt="run"><br>此时程序已开始运行, 并且出现问题的设备会用红色标识. 点击各表格, 会跳转到相应的log轮次. 例如绿色的会跳转到96轮log, 红色则跳转到出问题的那一轮. 红色的设备将不继续进程后续测试. </li>
<li>第四步, 当所有测试完后需点击stop键</li>
</ol>
<h3 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h3><p>请点击左上角自行阅读源代码:D</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>代码已在Windows平台上的Python 2.7版本下测试通过. 你需要的只是安装好tornado库, 可以参照<a href="http://www.tornadoweb.org/en/stable/#installation" target="_blank" rel="external">官方文档</a>, 其中一些库你可能需要找Windows的编译版本. 若你是要在*nix平台上运行此代码, 你需要重写ssh.py模块, 利用更标准的库, 例如paramiko等.</p>
<h3 id="最后说明"><a href="#最后说明" class="headerlink" title="最后说明"></a>最后说明</h3><p>这只是一个上层的清晰明了的控制框架, 下层怎么实现取决于你, 最终只要能抓取到测试的log则算一个完整的来回. 这只是一个对于大规模测试的抱砖引玉的idea, 具体怎么实施, 那将由你来决定!</p>
<h2 id="项目页链接"><a href="#项目页链接" class="headerlink" title="项目页链接"></a><a href="http://damon-wenc.github.io/Auto-Test-Framework/">项目页链接</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Auto-Test-Framework&quot;&gt;&lt;a href=&quot;#Auto-Test-Framework&quot; class=&quot;headerlink&quot; title=&quot;Auto-Test-Framework&quot;&gt;&lt;/a&gt;Auto-Test-Framework&lt;/h1&gt;&lt;h2 id=&quot;English-version&quot;&gt;&lt;a href=&quot;#English-version&quot; class=&quot;headerlink&quot; title=&quot;English version&quot;&gt;&lt;/a&gt;English version&lt;/h2&gt;&lt;h3 id=&quot;Keywords&quot;&gt;&lt;a href=&quot;#Keywords&quot; class=&quot;headerlink&quot; title=&quot;Keywords&quot;&gt;&lt;/a&gt;Keywords&lt;/h3&gt;&lt;p&gt;An automatic &amp;amp; light mass-clients test framework based on Python &amp;amp; HTML; python do the logic, and web(HTML) display it.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;&lt;a href=&quot;#description&quot; class=&quot;headerlink&quot; title=&quot;description&quot;&gt;&lt;/a&gt;description&lt;/h3&gt;&lt;p&gt;This is not a complete auto-test system, it’s just a upper layer test framework, sort of a ‘Control Center’, allow you to master a mass of devices; whatever tests you are about to run on your device is not included, but this framework will help you senting ‘start/stop’ commands via SSH, and collecting test logs to monitor test progress, and eventually the web will show the test results to you in a clear way.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damon-wenc.github.io/blog/tags/Python/"/>
    
      <category term="Automation" scheme="http://damon-wenc.github.io/blog/tags/Automation/"/>
    
  </entry>
  
  <entry>
    <title>豆瓣高分电影年代录</title>
    <link href="http://damon-wenc.github.io/blog/2014/03/26/high-rate-movies-in-douban-by-years/"/>
    <id>http://damon-wenc.github.io/blog/2014/03/26/high-rate-movies-in-douban-by-years/</id>
    <published>2014-03-26T14:50:40.000Z</published>
    <updated>2016-12-04T14:05:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>这个是我从<a href="http://movie.douban.com/top250?start=0&amp;filter=&amp;type=" target="_blank" rel="external">豆瓣电影TOP250</a>系列直接抓取下来的, 目的是想查看一下伟大电影的诞生与经济大小年是否有对应关系。</p>
<p>当然这个实现方法明显是不合理的, 一是我的样品库太小了, 二是好多好电影, 特别是近年的, 或许需要时间及机缘才会被大家所发现对吧(例如大话西游), 所以这里只是仅供一个构思, 主要是练习一下Python对网页的抓取。</p>
<p>这第一个爬虫简单得略粗糙了，权当练习吧。</p>
<p>以下是程序的输出：</p>
<a id="more"></a>
<blockquote>
<p>电影名     年代      地区      评分<br>肖申克的救赎      1994        美国      9.6<br>这个杀手不太冷     1994        法国      9.4<br>霸王别姬        1993        中国大陆 香港     9.5<br>阿甘正传        1994        美国      9.4<br>美丽人生        1997        意大利     9.5<br>千与千寻        2001        日本      9.2<br>辛德勒的名单      1993        美国      9.4<br>泰坦尼克号       1997        美国      9.2<br>海上钢琴师       1998        意大利     9.2<br>机器人总动员      2008        美国      9.3<br>盗梦空间        2010        美国 英国       9.2<br>三傻大闹宝莱坞     2009        印度      9.1<br>放牛班的春天      2004        法国 瑞士 德国        9.2<br>忠犬八公的故事     2009        美国 英国       9.2<br>大话西游之大圣娶亲       1995        香港 中国大陆     9.1<br>龙猫      1988        日本      9.1<br>教父      1972        美国      9.2<br>乱世佳人        1939        美国      9.2<br>天堂电影院       1988        意大利 法国      9.1<br>楚门的世界       1998        美国      9.0<br>当幸福来敲门      2006        美国      8.9<br>搏击俱乐部       1999        美国 德国       9.0<br>触不可及        2011        法国      9.1<br>指环王3：王者无敌       2003        美国 新西兰      9.1<br>十二怒汉        1957        美国      9.3<br>罗马假日        1953        美国      8.9<br>无间道     2002        香港      8.9<br>怦然心动        2010        美国      8.9<br>天空之城        1986        日本      9.0<br>两杆大烟枪       1998        英国      9.0<br>熔炉      2011        韩国      9.1<br>大话西游之月光宝盒       1995        香港 中国大陆     8.9<br>少年派的奇幻漂流        2012        美国 台湾 英国 加拿大        9.0<br>飞屋环游记       2009        美国      8.9<br>鬼子来了        2000        中国大陆        9.1<br>飞越疯人院       1975        美国      9.0<br>蝙蝠侠：黑暗骑士        2008        美国 英国       9.0<br>窃听风暴        2006        德国      9.1<br>海豚湾     2009        美国      9.3<br>活着      1994        中国大陆 香港     9.0<br>V字仇杀队       2005        美国 英国 德国        8.8<br>闻香识女人       1992        美国      8.9<br>星际穿越        2014        美国 英国 加拿大       9.1<br>美丽心灵        2001        美国      8.9<br>天使爱美丽       2001        法国 德国       8.7<br>教父2     1974        美国      9.1<br>指环王2：双塔奇兵       2002        美国 新西兰      8.9<br>指环王1：魔戒再现       2001        新西兰 美国      8.9<br>哈尔的移动城堡     2004        日本      8.8<br>情书      1995        日本      8.8<br>死亡诗社        1989        美国      8.9<br>七宗罪     1995        美国      8.7<br>美国往事        1984        意大利 美国      9.1<br>钢琴家     2002        法国 德国 英国 波兰     9.0<br>勇敢的心        1995        美国      8.8<br>剪刀手爱德华      1990        美国      8.7<br>狮子王     1994        美国      8.9<br>致命魔术        2006        美国 英国       8.8<br>被嫌弃的松子的一生       2006        日本      8.9<br>音乐之声        1965        美国      8.9<br>小鞋子     1999        伊朗      9.1<br>低俗小说        1994        美国      8.7<br>辩护人     2013        韩国      9.1<br>入殓师     2008        日本      8.8<br>蝴蝶效应        2004        美国 加拿大      8.7<br>沉默的羔羊       1991        美国      8.7<br>饮食男女        1994        台湾 美国       9.0<br>本杰明·巴顿奇事        2008        美国      8.7<br>玛丽和马克思      2009        澳大利亚        8.9<br>黑客帝国        1999        美国 澳大利亚     8.8<br>控方证人        1957        美国      9.5<br>拯救大兵瑞恩      1998        美国      8.8<br>西西里的美丽传说        2000        意大利 美国      8.7<br>幽灵公主        1997        日本      8.8<br>心灵捕手        1997        美国      8.7<br>第六感     1999        美国      8.8<br>大鱼      2003        美国      8.7<br>阳光灿烂的日子     1994        中国大陆 香港     8.7<br>让子弹飞        2010        中国大陆 香港     8.7<br>射雕英雄传之东成西就      1993        香港      8.7<br>阳光姐妹淘       2011        韩国      8.8<br>素媛      2013        韩国      9.1<br>上帝之城        2002        巴西 法国       8.9<br>大闹天宫        1997        香港 日本 韩国        8.7<br>重庆森林        1994        香港      8.6<br>禁闭岛     2010        美国      8.6<br>致命ID        2003        美国      8.6<br>甜蜜蜜     1996        香港      8.7<br>告白      2010        日本      8.6<br>萤火虫之墓       1988        日本      8.7<br>一一      2000        台湾 日本       8.9<br>加勒比海盗       2003        美国      8.6<br>爱在黎明破晓前     1995        美国 奥地利 瑞士       8.7<br>风之谷     1984        日本      8.8<br>阿凡达     2009        美国 英国       8.6<br>爱在日落黄昏时     2004        美国      8.7<br>侧耳倾听        1995        日本      8.8<br>驯龙高手        2010        美国      8.7<br>断背山     2005        美国 加拿大      8.5<br>布达佩斯大饭店     2014        美国 德国 英国        8.7<br>海洋      2009        法国 瑞士 西班牙 美国 阿联酋        9.0<br>猫鼠游戏        2002        美国 加拿大      8.7<br>燃情岁月        1994        美国      8.8<br>狩猎      2012        丹麦 瑞典       9.0<br>摩登时代        1936        美国      9.1<br>超脱      2011        美国      8.7<br>幸福终点站       2004        美国      8.6<br>电锯惊魂        2004        美国 澳大利亚     8.6<br>谍影重重3       2007        美国 德国       8.7<br>神偷奶爸        2010        美国      8.5<br>菊次郎的夏天      1999        日本      8.7<br>虎口脱险        1966        法国 英国       8.9<br>借东西的小人阿莉埃蒂      2010        日本      8.7<br>真爱至上        2003        英国 美国       8.5<br>雨人      1988        美国      8.6<br>岁月神偷        2010        香港 中国大陆     8.6<br>贫民窟的百万富翁        2008        英国 美国       8.5<br>哈利·波特与魔法石       2001        美国 英国       8.6<br>记忆碎片        2000        美国      8.5<br>疯狂原始人       2013        美国      8.7<br>末代皇帝        1987        意大利 中国大陆 英国 法国      8.8<br>倩女幽魂        1987        香港      8.6<br>东邪西毒        1994        香港 台湾       8.5<br>七武士     1954        日本      9.1<br>穿条纹睡衣的男孩        2008        英国 美国       8.8<br>怪兽电力公司      2001        美国      8.6<br>穿越时空的少女     2006        日本      8.6<br>魂断蓝桥        1940        美国      8.8<br>恋恋笔记本       2004        美国      8.5<br>杀人回忆        2003        韩国      8.6<br>猜火车     1996        英国      8.5<br>卢旺达饭店       2004        英国 南非 意大利 美国        8.8<br>恐怖直播        2013        韩国      8.7<br>消失的爱人       2014        美国      8.7<br>黑天鹅     2010        美国      8.5<br>红辣椒     2006        日本      8.8<br>傲慢与偏见       2005        法国 英国 美国        8.4<br>教父3     1990        美国      8.7<br>完美的世界       1993        美国      9.0<br>英雄本色        1986        香港      8.7<br>玩具总动员3      2010        美国      8.7<br>人工智能        2001        美国      8.6<br>秒速5厘米       2007        日本      8.4<br>我是山姆        2001        美国      8.8<br>纵横四海        1991        香港      8.7<br>雨中曲     1952        美国      8.9<br>香水      2006        德国 法国 西班牙 美国        8.4<br>冰川时代        2002        美国      8.4<br>喜宴      1993        台湾 美国       8.7<br>萤火之森        2011        日本      8.8<br>撞车      2004        美国 德国       8.6<br>浪潮      2008        德国      8.7<br>碧海蓝天        1988        法国 美国 意大利       8.7<br>小森林 夏秋篇     2014        日本      8.9<br>朗读者     2008        美国 德国       8.5<br>追随      1998        英国      9.0<br>喜剧之王        1999        香港      8.4<br>海盗电台        2009        英国 德国 法国        8.6<br>可可西里        2004        中国大陆 香港     8.6<br>7号房的礼物      2013        韩国      8.6<br>战争之王        2005        美国 法国       8.5<br>哈利·波特与死亡圣器(下)       2011        美国 英国       8.6<br>梦之安魂曲       2000        美国      8.7<br>罗生门     1950        日本      8.7<br>花样年华        2000        香港 法国       8.4<br>一次别离        2011        伊朗      8.7<br>迁徙的鸟        2001        法国 德国 意大利 西班牙 瑞士        9.1<br>荒野生存        2007        美国      8.6<br>谍影重重        2002        美国 德国 捷克        8.5<br>谍影重重2       2004        美国 德国       8.5<br>心迷宫     2014        中国大陆        8.6<br>勇闯夺命岛       1996        美国      8.5<br>绿里奇迹        1999        美国      8.7<br>燕尾蝶     1996        日本      8.6<br>唐伯虎点秋香      1993        香港      8.3<br>地球上的星星      2007        印度      8.8<br>阿飞正传        1990        香港      8.5<br>卡萨布兰卡       1942        美国      8.6<br>超能陆战队       2014        美国      8.6<br>英国病人        1996        美国 英国       8.4<br>时空恋旅人       2013        英国      8.6<br>惊魂记     1960        美国      8.8<br>变脸      1997        美国      8.4<br>叫我第一名       2008        美国      8.6<br>蝙蝠侠：黑暗骑士崛起      2012        美国 英国       8.5<br>恐怖游轮        2009        英国 澳大利亚     8.3<br>魔女宅急便       1989        日本      8.4<br>这个男人来自地球        2007        美国      8.5<br>E.T. 外星人        1982        美国      8.5<br>穆赫兰道        2001        法国 美国       8.3<br>再次出发之纽约遇见你      2013        美国      8.5<br>终结者2：审判日        1991        美国 法国       8.5<br>荒蛮故事        2014        阿根廷 西班牙     8.7<br>发条橙     1971        英国 美国       8.4<br>非常嫌疑犯       1995        德国 美国       8.6<br>东京物语        1953        日本      9.2<br>哪吒闹海        1979        中国大陆        8.8<br>达拉斯买家俱乐部        2013        美国      8.6<br>末路狂花        1991        美国 法国       8.7<br>被解救的姜戈      2012        美国      8.5<br>美国丽人        1999        美国      8.4<br>上帝也疯狂       1980        博茨瓦纳 南非     8.6<br>源代码     2011        美国 加拿大      8.3<br>忠犬八公物语      1987        日本      9.0<br>曾经      2006        爱尔兰     8.3<br>黑客帝国3：矩阵革命      2003        美国 澳大利亚     8.5<br>新龙门客栈       1992        香港 中国大陆     8.4<br>牯岭街少年杀人事件       1991        台湾      8.7<br>爱·回家        2002        韩国      9.1<br>黄金三镖客       1966        意大利 西班牙 西德      9.1<br>青蛇      1993        香港      8.3<br>蓝色大门        2002        台湾 法国       8.2<br>勇士      2011        美国      8.9<br>初恋这件小事      2010        泰国      8.3<br>无耻混蛋        2009        美国 德国       8.4<br>未麻的部屋       1997        日本      8.7<br>蝴蝶      2002        法国      8.6<br>两小无猜        2003        法国 比利时      8.2<br>暖暖内含光       2004        美国      8.4<br>麦兜故事        2001        香港      8.5<br>城市之光        1931        美国      9.2<br>与狼共舞        1990        美国      8.9<br>巴黎淘气帮       2009        法国 比利时      8.6<br>爱在暹罗        2007        泰国      8.3<br>夜访吸血鬼       1994        美国      8.3<br>无敌破坏王       2012        美国      8.7<br>小森林 冬春篇     2015        日本      8.9<br>遗愿清单        2007        美国      8.5<br>爆裂鼓手        2014        美国      8.6<br>中央车站        1998        巴西 法国       8.7<br>偷拐抢骗        2000        英国 美国       8.5<br>大卫·戈尔的一生        2003        美国 德国 英国        8.7<br>国王的演讲       2010        英国 澳大利亚 美国      8.3<br>血钻      2006        美国 德国       8.5<br>罪恶之城        2005        美国      8.4<br>荒岛余生        2000        美国      8.4<br>月球      2009        英国      8.5<br>寿司之神        2011        美国      8.8<br>千钧一发        1997        美国      8.7<br>枪火      1999        香港      8.6<br>我爱你     2011        韩国      9.0<br>疯狂的石头       2006        中国大陆 香港     8.2<br>廊桥遗梦        1995        美国      8.5<br>角斗士     2000        英国 美国       8.4<br>导盲犬小Q       2004        日本      8.4<br>不一样的天空      1993        美国      8.6<br>假如爱有天意      2003        韩国      8.2<br>速度与激情5      2011        美国      8.4<br>我们俩     2005        中国大陆        8.6<br>year 1931 has 1 great moives<br>year 1936 has 1 great moives<br>year 1939 has 1 great moives<br>year 1940 has 1 great moives<br>year 1942 has 1 great moives<br>year 1950 has 1 great moives<br>year 1952 has 1 great moives<br>year 1953 has 2 great moives<br>year 1954 has 1 great moives<br>year 1957 has 2 great moives<br>year 1960 has 1 great moives<br>year 1965 has 1 great moives<br>year 1966 has 2 great moives<br>year 1971 has 1 great moives<br>year 1972 has 1 great moives<br>year 1974 has 1 great moives<br>year 1975 has 1 great moives<br>year 1979 has 1 great moives<br>year 1980 has 1 great moives<br>year 1982 has 1 great moives<br>year 1984 has 2 great moives<br>year 1986 has 2 great moives<br>year 1987 has 3 great moives<br>year 1988 has 5 great moives<br>year 1989 has 2 great moives<br>year 1990 has 4 great moives<br>year 1991 has 5 great moives<br>year 1992 has 2 great moives<br>year 1993 has 8 great moives<br>year 1994 has 12 great moives<br>year 1995 has 9 great moives<br>year 1996 has 5 great moives<br>year 1997 has 8 great moives<br>year 1998 has 6 great moives<br>year 1999 has 9 great moives<br>year 2000 has 9 great moives<br>year 2001 has 11 great moives<br>year 2002 has 10 great moives<br>year 2003 has 10 great moives<br>year 2004 has 13 great moives<br>year 2005 has 6 great moives<br>year 2006 has 10 great moives<br>year 2007 has 7 great moives<br>year 2008 has 9 great moives<br>year 2009 has 12 great moives<br>year 2010 has 13 great moives<br>year 2011 has 12 great moives<br>year 2012 has 5 great moives<br>year 2013 has 8 great moives</p>
</blockquote>
<p>结果也正是说明这不靠谱╮(╯▽╰)╭, 或许输入量大一点会有不小改善。</p>
<p>详情请自行阅读及运行movie_years.py</p>
<p><em>—update—</em></p>
<p><em>像这种利用正则表达式来爬网页的，很可能一段时间过后网页规则就变了，爬不下来了。所以要么掌握方法，要么及时行乐。</em></p>
<h2 id="项目页链接"><a href="#项目页链接" class="headerlink" title="项目页链接"></a><a href="http://damon-wenc.github.io/Small-Data/">项目页链接</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;这个是我从&lt;a href=&quot;http://movie.douban.com/top250?start=0&amp;amp;filter=&amp;amp;type=&quot;&gt;豆瓣电影TOP250&lt;/a&gt;系列直接抓取下来的, 目的是想查看一下伟大电影的诞生与经济大小年是否有对应关系。&lt;/p&gt;
&lt;p&gt;当然这个实现方法明显是不合理的, 一是我的样品库太小了, 二是好多好电影, 特别是近年的, 或许需要时间及机缘才会被大家所发现对吧(例如大话西游), 所以这里只是仅供一个构思, 主要是练习一下Python对网页的抓取。&lt;/p&gt;
&lt;p&gt;这第一个爬虫简单得略粗糙了，权当练习吧。&lt;/p&gt;
&lt;p&gt;以下是程序的输出：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damon-wenc.github.io/blog/tags/Python/"/>
    
      <category term="Spider" scheme="http://damon-wenc.github.io/blog/tags/Spider/"/>
    
  </entry>
  
</feed>
